import random
import telebot
from telebot import types
import codecs
import time
if_not_book = "–ï—Å–ª–∏ –≤—ã –∏—Å–∫–∞–ª–∏ –¥—Ä—É–≥—É—é –∫–Ω–∏–≥—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å"
quantity = 996
command_list = 'üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É - –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–º–∏ –∫–Ω–∏–≥–∏ –ª–∏–±–æ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –ª–∏–±–æ –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö –≥–æ—Ä–æ–¥–∞ —Å—Ä–∞–∑—É.\n\nüåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É - –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ—á–∏—Ç–∞–≤ –∫–Ω–∏–≥—É, –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ—é –æ—Ü–µ–Ω–∫—É –æ –Ω–µ–π. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ü–µ–Ω–∏—Ç—å –æ–¥–Ω—É –∏–∑ –∫–Ω–∏–≥ –∏ –ø–æ–º–æ—á—å –¥—Ä—É–≥–∏–º —á–∏—Ç–∞—Ç–µ–ª—è–º –Ω–∞–π—Ç–∏ –¥–ª—è —Å–µ–±—è —á—Ç–æ-—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ.\n\nüìä–†–µ–π—Ç–∏–Ω–≥ - –ï—Å–ª–∏ –≤—ã —Å–æ–º–Ω–µ–≤–∞–µ—Ç–µ—Å—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º —Å—Ç–æ–∏—Ç –ø–æ—á–∏—Ç–∞—Ç—å, –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∫–Ω–∏–≥, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±–æ—Ç–∞.\n\nüé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞ - –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ, –∫–∞–∫—É—é –∏–º–µ–Ω–Ω–æ –∫–Ω–∏–≥—É –≤–∞–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å, —è –º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –∫–Ω–∏–≥—É.\n\nüéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ - –ë—ã–≤–∞–µ—Ç —Ç–∞–∫–æ–µ, —á—Ç–æ –ø–æ—Å–ª–µ –ø—Ä–æ—á—Ç–µ–Ω–∏—è, —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –∑–∞–±—ã–≤–∞–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–Ω–∏–≥–∏. –ú—ã —Å–æ–∑–¥–∞–ª–∏ –¥–ª—è –≤–∞—Å —Ç–µ—Å—Ç, –ø—Ä–æ–π–¥—è –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ—Å—Ç—å —Å–≤–æ–∏—Ö –∑–Ω–∞–Ω–∏–π –∏–ª–∏ —É–∑–Ω–∞—Ç—å –æ –Ω–æ–≤–æ–π –¥–ª—è –≤–∞—Å –∫–Ω–∏–≥–∏.\n\n‚ùì–ü–æ–º–æ—â—å –∏  –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - –ó–¥–µ—Å—å –≤—ã —É–≤–∏–¥–∏—Ç–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Ä–µ—à–µ–Ω–∏—é –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º, —Å–º–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –±–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞'
bot = telebot.TeleBot("5131160257:AAF-vANgZy9dmMeRWmlf4_hX5PxqZDzLfN4")

@bot.message_handler(commands = ["start", "help"])
def start(message):
    if message.text == "/start":
        msg = "–ü—Ä–∏–≤–µ—Ç, " + message.from_user.first_name + "!\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç –≤–∞—à–∏–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –≤ –æ–±—à–∏—Ä–Ω–æ–º –º–∏—Ä–µ –∫–Ω–∏–≥."
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
        time.sleep(2)
        bot.send_message(message.chat.id, "–ß—Ç–æ —è —É–º–µ—é?\n\n\n" + command_list + '\n\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüòâ')
    if message.text == "/help":
        bot.send_message(message.chat.id, '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:\n\n' + command_list)

@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.text == "üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É" or message.text == "üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        push = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞")
        herz = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞")
        gork = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ")
        any = types.KeyboardButton("üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(push)
        markup.add(herz)
        markup.add(gork)
        markup.add(any)
        markup.add(back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", reply_markup=markup)
        bot.register_next_step_handler(message, choose_library)
    elif message.text == "‚è™–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
    elif message.text == "üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏", reply_markup=markup)
        bot.register_next_step_handler(message, set_rating)
    elif message.text == "üìä–†–µ–π—Ç–∏–Ω–≥" or message.text == "üîÑ–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        popular = types.KeyboardButton("üë•–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ")
        best = types.KeyboardButton("üéñ–°–∞–º—ã–µ –ª—É—á—à–∏–µ")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(best, popular, back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:\n\nüéñ–°–∞–º—ã–µ –ª—É—á—à–∏–µ - –∫–Ω–∏–≥–∏ —Å —Å–∞–º–æ–π –≤—ã—Å–æ–∫–æ–π —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–æ–π\n\nüë•–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ - –∫–Ω–∏–≥–∏ —Å —Å–∞–º—ã–º –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—Ü–µ–Ω–æ–∫", reply_markup=markup)
        bot.register_next_step_handler(message, show_rating)
    elif message.text == "üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞" or message.text == "üìñ–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É":
        rate = open("rating.txt", encoding='utf-8')
        author_list = []
        name_list = []
        rate_list = []
        cnt_list = []
        for i in range(quantity):
            author, name, rates, cnt = rate.readline().split('"')
            author_list += [author]
            name_list += [name]
            rate_list += [rates]
            cnt_list += [cnt]
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        new_random = types.KeyboardButton("üìñ–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é –∫–Ω–∏–≥—É")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(new_random, back)
        n = random.randint(0, quantity-1)
        bot.send_message(message.chat.id, "–•–º–º–º–º...üßê\n–Ø –±—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª –≤–∞–º –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–ª–µ–¥—É—â—É—é –∫–Ω–∏–≥—É: " + author_list[n] + ", " + name_list[n], reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)
    elif message.text == "üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        game = types.KeyboardButton("üéÆ–ò–≥—Ä–∞—Ç—å")
        top = types.KeyboardButton("‚ú®–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(game, top, back)
        bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –∏–∑ 10 –≤–æ–ø—Ä–æ—Å–æ–≤, –≥–¥–µ –≤–∞–º –±—É–¥–µ—Ç –Ω–µ–æ–±–æ—Ö–æ–¥–∏–º–æ —É–∑–Ω–∞—Ç—å –∫–Ω–∏–≥—É –ø–æ –µ–µ –∫—Ä–∞—Ç–∫–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é. \n\n–í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ—Ç–µ —Ç–µ—Å—Ç –¥–æ –∫–æ–Ω—Ü–∞!", reply_markup=markup)
        bot.register_next_step_handler(message, game1)
    elif message.text == "‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è":
        bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –∫–∞–∫–æ–π-—Ç–æ –≤–æ–ø—Ä–æ—Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ: https://t.me/mpo_LibraryBot")

def choose_library(message):
    global name_list, author_list, date_list
    if message.text == "‚è™–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
    elif message.text == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞":
        biblio = codecs.open("biblio_pushkin.txt", encoding='utf-8')
        author_list = []
        name_list = []
        date_list = []
        for i in range(quantity):
            author, name, date = biblio.readline().split('"')
            author_list += [author]
            name_list += [name]
            date_list += [date]
        k = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å", reply_markup=markup)
        bot.register_next_step_handler(message, get_book_pushkin)

    elif message.text == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞":
        biblio = codecs.open("biblio_herzen.txt", encoding='utf-8')
        author_list = []
        name_list = []
        date_list = []
        for i in range(quantity):
            author, name, date = biblio.readline().split('"')
            author_list += [author]
            name_list += [name]
            date_list += [date]
        k = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å", reply_markup=markup)
        bot.register_next_step_handler(message, get_book_herzen)

    elif message.text == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ":
        biblio = codecs.open("biblio_gorkov.txt", encoding='utf-8')
        author_list = []
        name_list = []
        date_list = []
        for i in range(quantity):
            author, name, date = biblio.readline().split('"')
            author_list += [author]
            name_list += [name]
            date_list += [date]
        k = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å", reply_markup=markup)
        bot.register_next_step_handler(message, get_book_gorkov)

    elif message.text == "üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö":
        k = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å", reply_markup=markup)
        bot.register_next_step_handler(message, get_book_all)


def get_book_pushkin(message):
    for i in range(quantity):
        if message.text == "‚è™–Ω–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            push = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞")
            herz = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞")
            gork = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ")
            any = types.KeyboardButton("üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(push)
            markup.add(herz)
            markup.add(gork)
            markup.add(any)
            markup.add(back)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", reply_markup=markup)
            bot.register_next_step_handler(message, choose_library)
            k = 0
            break
        elif name_list[i].count(message.text) > 0 and date_list[i].count("-") == 1:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ü—É—à–∫–∏–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n" + if_not_book, reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        elif name_list[i].count(message.text) > 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list[i] + "\n\n" + if_not_book, reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        else:
            k = 1
    if k == 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(again, back)
        bot.send_message(message.chat.id, "–ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ü—É—à–∫–∏–Ω–∞ –Ω–µ—Ç", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

def get_book_herzen(message):
    for i in range(quantity):
        if message.text == "‚è™–Ω–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            push = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞")
            herz = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞")
            gork = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ")
            any = types.KeyboardButton("üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(push)
            markup.add(herz)
            markup.add(gork)
            markup.add(any)
            markup.add(back)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", reply_markup=markup)
            bot.register_next_step_handler(message, choose_library)
            k = 0
            break
        elif name_list[i].count(message.text) > 0 and date_list[i].count("-") == 1:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n" + if_not_book,reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        elif name_list[i].count(message.text) > 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list[i] + "\n\n" + if_not_book, reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        else:
            k = 1
    if k == 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(again, back)
        bot.send_message(message.chat.id, "–ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞ –Ω–µ—Ç", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

def get_book_gorkov(message):
    for i in range(quantity):
        if message.text == "‚è™–Ω–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            push = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞")
            herz = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞")
            gork = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ")
            any = types.KeyboardButton("üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(push)
            markup.add(herz)
            markup.add(gork)
            markup.add(any)
            markup.add(back)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", reply_markup=markup)
            bot.register_next_step_handler(message, choose_library)
            k = 0
            break
        elif name_list[i].count(message.text) > 0 and date_list[i].count("-") == 1:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n" + if_not_book,reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        elif name_list[i].count(message.text) > 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(again, back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list[i] + ", " + name_list[i] + '\n' + "–≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list[i] + "\n\n" + if_not_book, reply_markup=markup)
            bot.register_next_step_handler(message, bot_message)
            k = 0
            break
        else:
            k = 1
    if k == 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(again, back)
        bot.send_message(message.chat.id, "–ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ –Ω–µ—Ç", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)


def get_book_all(message):
    biblio1 = codecs.open("biblio_pushkin.txt", encoding='utf-8')
    biblio2 = codecs.open("biblio_herzen.txt", encoding='utf-8')
    biblio3 = codecs.open("biblio_gorkov.txt", encoding='utf-8')
    author_list_push = []
    name_list_push = []
    date_list_push = []
    author_list_herz = []
    name_list_herz = []
    date_list_herz = []
    author_list_gork = []
    name_list_gork = []
    date_list_gork = []
    for i in range(quantity):
        author, name, date = biblio1.readline().split('"')
        author_list_push += [author]
        name_list_push += [name]
        date_list_push += [date]
    for i in range(quantity):
        author, name, date = biblio2.readline().split('"')
        author_list_herz += [author]
        name_list_herz += [name]
        date_list_herz += [date]
    for i in range(quantity):
        author, name, date = biblio3.readline().split('"')
        author_list_gork += [author]
        name_list_gork += [name]
        date_list_gork += [date]
    msg = ''
    if message.text == "‚è™–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        push = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞")
        herz = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞")
        gork = types.KeyboardButton("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ")
        any = types.KeyboardButton("üèõ–ò—Å–∫–∞—Ç—å –≤–æ –≤—Å–µ—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(push)
        markup.add(herz)
        markup.add(gork)
        markup.add(any)
        markup.add(back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –Ω–∞–π—Ç–∏ –∫–Ω–∏–≥—É", reply_markup=markup)
        bot.register_next_step_handler(message, choose_library)
    else:
        for i in range(quantity):
            if name_list_push[i].count(message.text) > 0 and date_list_push[i].count("-") == 1:
                msg += '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list_push[i] + ", " + name_list_push[i] + '\n\n\n ‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞: \n' + "  –≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n"
                k = 0
                break
            elif name_list_push[i].count(message.text) > 0:
                msg += '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + author_list_push[i] + ", " + name_list_push[i] + '\n\n\n ‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞: \n' + "  –≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list_push[i] + "\n\n"
                k = 0
                break
            else:
                k = 1
        if k == 1:
            msg += '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–µ—Ç–µ –∫–Ω–∏–≥—É: ' + "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"+ '\n\n\n ‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ü—É—à–∫–∏–Ω–∞: \n' + "  –ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç\n\n"
        k = 1
        for i in range(quantity):
            if name_list_herz[i].count(message.text) > 0 and date_list_herz[i].count("-") == 1:
                msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞: \n' + "  –≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n"
                k = 0
                break
            elif name_list_herz[i].count(message.text) > 0:
                msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞: \n' + "  –≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list_herz[i] + "\n"
                k = 0
                break
            else:
                k = 1
        if k == 1:
            msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–µ—Ä—Ü–µ–Ω–∞: \n' + "  –ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç\n\n"
        k = 1
        for i in range(quantity):
            if name_list_gork[i].count(message.text) > 0 and date_list_gork[i].count("-") == 1:
                msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ: \n' + "  –≠—Ç–∞ –∫–Ω–∏–≥–∞ –µ—Å—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–π—Ç–∏ –∏ –∑–∞–±—Ä–∞—Ç—å –µ–µ\n\n\n"
                k = 0
                break
            elif name_list_gork[i].count(message.text) > 0:
                msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ: \n' + "  –≠—Ç—É –∫–Ω–∏–≥—É —Å–µ–π—á–∞—Å –∑–∞–±—Ä–∞–ª–∏, –∫—Ä–∞–π–Ω–∏–π —Å—Ä–æ–∫ –µ–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ - " + date_list_gork[i] + "\n\n\n"
                k = 0
                break
            else:
                k = 1
        if k == 1:
            msg += '‚Ä¢–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∏–º. –ì–æ—Ä—å–∫–æ–≥–æ: \n' + "  –ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –Ω–µ—Ç\n\n\n"

        msg += if_not_book

        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        again = types.KeyboardButton("üîÑ–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(again, back)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

@bot.message_handler()
def show_rating(message):
    rate = open("rating.txt", encoding='utf-8')
    author_rate_list = []
    name_rate_list = []
    rate_rate_list = []
    cnt_rate_list = []
    for i in range(quantity):
        author, name, rates, cnt = rate.readline().split('"')
        author_rate_list += [author]
        name_rate_list += [name]
        rate_rate_list += [rates]
        cnt_rate_list += [cnt]
    if message.text == "üéñ–°–∞–º—ã–µ –ª—É—á—à–∏–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        another = types.KeyboardButton("üîÑ–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        markup.add(another)
        average_marks = []
        msg = ""
        for i in range(quantity):
            average_marks += [round(int(rate_rate_list[i]) / int(cnt_rate_list[i]), 2)]
        top_list = list(sorted(average_marks)[::-1])
        for i in range(10):
            for j in range(quantity):
                if top_list[i] == average_marks[j]:
                    msg += str(i + 1) + " –º–µ—Å—Ç–æ - " + author_rate_list[j] + ", " + name_rate_list[j] + " - —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: " + str(average_marks[j]) + "\n\n"
                    average_marks[j] = -9999
                    break
        bot.send_message(message.chat.id, "–¢–û–ü - 10 –∫–Ω–∏–≥:\n" + msg, reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

    if message.text == "üë•–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        another = types.KeyboardButton("üîÑ–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        markup.add(another)
        save = []
        msg = ""
        for i in range(quantity):
            save += [cnt_rate_list[i]]
        top_list = list(sorted(cnt_rate_list)[::-1])
        for i in range(10):
            for j in range(quantity):
                if top_list[i] == cnt_rate_list[j]:
                    msg += str(i + 1) + " –º–µ—Å—Ç–æ - " + author_rate_list[j] + ", " + name_rate_list[j] + " -  –≤—Å–µ–≥–æ –æ—Ü–µ–Ω–æ–∫: " + str(cnt_rate_list[j]) + "\n"
                    cnt_rate_list[j] = -9999
                    break
        for i in range(quantity):
            cnt_rate_list[i] = save[i]
        bot.send_message(message.chat.id, "–¢–û–ü - 10 –∫–Ω–∏–≥:\n" + msg, reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)
    if message.text == "‚è™–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)

@bot.message_handler()
def set_rating(message):
    global i
    rate = open("rating.txt", encoding='utf-8')
    author_list = []
    name_list = []
    rate_list = []
    cnt_list = []
    for i in range(quantity):
        author, name, rates, cnt = rate.readline().split('"')
        author_list += [author]
        name_list += [name]
        rate_list += [rates]
        cnt_list += [cnt]
    for i in range(quantity):
        if message.text == "‚è™–Ω–∞–∑–∞–¥":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
            mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
            rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
            rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
            help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
            game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
            markup.add(find, mark, rating, rand, game)
            markup.add(help)
            bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
            k = 0
            break
        elif name_list[i].count(message.text) > 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("‚è™–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏")
            one = types.KeyboardButton("1")
            two = types.KeyboardButton("2")
            three = types.KeyboardButton("3")
            four = types.KeyboardButton("4")
            five = types.KeyboardButton("5")
            markup.add(one, two, three, four, five)
            markup.add(back)
            bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã –∏—â–∏—Ç–µ –∫–Ω–∏–≥—É: "' + author_list[i] + ", " + name_list[i] + '"\n' + "–≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É, –æ—Ç 1 –¥–æ 5\n\n" + if_not_book, reply_markup=markup)
            bot.register_next_step_handler(message, set_mark)
            k = 0
            break
        else:
            k = 1
    if k == 1:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        again = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–Ω–∏–≥—É")
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(again, back)
        bot.send_message(message.chat.id, "–ö–Ω–∏–≥–∏ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≤ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –±—É–¥—É—â–µ–º", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

@bot.message_handler()
def set_mark(message):
    global i
    rate = open("rating.txt", encoding='utf-8')
    author_list = []
    name_list = []
    rate_list = []
    cnt_list = []
    for j in range(quantity):
        author, name, rates, cnt = rate.readline().split('"')
        author_list += [author]
        name_list += [name]
        rate_list += [int(rates)]
        cnt_list += [int(cnt)]
    if message.text == "‚è™–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏", reply_markup=markup)
        bot.register_next_step_handler(message, set_rating)

    else:
        if message.text == "1" or message.text == "2" or message.text == "3" or message.text == "4" or message.text == "5":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
            markup.add(back)
            rate_list[i] += int(message.text)
            cnt_list[i] += 1
            bot.send_message(message.from_user.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –æ—Ü–µ–Ω–∫—É ", reply_markup=markup)
            rate = codecs.open("rating.txt", "w+", encoding='utf-8')
            msg = []
            for i in range(quantity):
                msg += [author_list[i] + '"' + name_list[i] + '"' + str(rate_list[i]) + '"' + str(cnt_list[i]) + '\n']
            rate.writelines(msg)
            bot.register_next_step_handler(message, bot_message)
        else:
            bot.send_message(message.from_user.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5")
            bot.register_next_step_handler(message, set_mark)

@bot.message_handler()
def game1(message):
    global rez
    f = codecs.open("game.txt", encoding = 'utf-8')
    string = f.readlines()
    names = []
    rezults = []
    users = []
    for i in string:
        name, id, rezult = i.split('"')
        names += [name]
        users += [int(id)]
        rezults += [int(rezult)]
    first_time = True
    for i in users:
        if i == message.chat.id:
            first_time = False
    if message.text == "üéÆ–ò–≥—Ä–∞—Ç—å" and first_time:
        rez = 0
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        ans1 = types.KeyboardButton("–ì–æ—Ä–µ –æ—Ç —É–º–∞, –ê.–°. –ì—Ä–∏–±–æ–µ–¥–æ–≤")
        ans2 = types.KeyboardButton("–û–±–ª–æ–º–æ–≤, –ò. –ì–æ–Ω—á–∞—Ä–æ–≤")
        ans3 = types.KeyboardButton("–°—Ç–æ –ª–µ—Ç –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–∞, –ú. –ì–∞—Ä—Å–∏—è")
        markup.add(ans1)
        markup.add(ans2)
        markup.add(ans3)
        bot.send_message(message.chat.id, "–†–æ–º–∞–Ω –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü–∏—è –≤–ª–∏—è–µ—Ç –Ω–∞ –º–æ–ª–æ–¥–æ–≥–æ –±–∞—Ä–∏–Ω–∞ –∏ –æ—Ç–±–∏–≤–∞–µ—Ç —É –Ω–µ–≥–æ –∂–µ–ª–∞–Ω–∏–µ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è ¬´–±–∏–∑–Ω–µ—Å–æ–º¬ª, –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ö–æ—Ä–æ—à–µ–Ω—å–∫–æ–π –æ—Å–æ–±–µ.", reply_markup=markup)
        bot.register_next_step_handler(message, game2)
    elif message.text == "üéÆ–ò–≥—Ä–∞—Ç—å":
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Å—Ç –¥–≤–∞–∂–¥—ã. –ù–µ –±–µ—Å–ø–æ–∫–æ–π—Ç–µ—Å—å, –≤–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—ã–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)
    elif message.text == "‚ú®–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back = types.KeyboardButton("‚è™–Ω–∞–∑–∞–¥")
        markup.add(back)
        users += [0] * 10
        rezults += [0] * 10
        names += ["empty"] * 10
        top_list = []
        save = []
        msg = ""
        for i in range(len(rezults)):
            save += [rezults[i]]
        top_list = list(sorted(rezults)[::-1])
        for i in range(10):
            for j in range(len(rezults)):
                if top_list[i] == rezults[j]:
                    msg += str(i + 1) + " –º–µ—Å—Ç–æ - " + names[j] + " -  –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: " + str(rezults[j]) + "\n"
                    rezults[j] = -9999
                    break
        for i in range(len(rezults)):
            rezults[i] = save[i]
        bot.send_message(message.chat.id, "–¢–û–ü - 10 –∏–≥—Ä–æ–∫–æ–≤:\n" + msg, reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)
    elif message.text == "‚è™–Ω–∞–∑–∞–¥":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
        mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
        rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
        rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
        help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
        game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
        markup.add(find, mark, rating, rand, game)
        markup.add(help)
        bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
        bot.register_next_step_handler(message, bot_message)

def game2(message):
    global rez
    if message.text == "–û–±–ª–æ–º–æ–≤, –ò. –ì–æ–Ω—á–∞—Ä–æ–≤":
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
        rez += 1
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –û–±–ª–æ–º–æ–≤, –ò. –ì–æ–Ω—á–∞—Ä–æ–≤")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–ì–æ—Ä–æ–¥ –∏ –ª–µ—Å —É –º–æ—Ä—è, –í. –ë–∏–∞–Ω–∫–∏")
    ans2 = types.KeyboardButton("–í –Æ–∂–Ω—ã—Ö –º–æ—Ä—è—Ö, –†. –°—Ç–∏–≤–µ–Ω—Å–æ–Ω")
    ans3 = types.KeyboardButton("–°—Ç–∞—Ä–∏–∫ –∏ –º–æ—Ä–µ, –≠. –•—ç–º–∏–Ω–≥—É—ç–π")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id, "–†—ã–±–∞–∫ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –º–æ—Ä—Å–∫—É—é –æ—Ö–æ—Ç—É. –ü–æ–π–º–∞–Ω–Ω–∞—è –¥–æ–±—ã—á–∞ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫–∞. –û–Ω–∞ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –ª–æ–¥–∫—É, –∞ –Ω–∞ —Ä—ã–±–∞–∫–∞ –Ω–∞–ø–∞–¥–∞—é—Ç –∞–∫—É–ª—ã.", reply_markup=markup)
    bot.register_next_step_handler(message, game3)

def game3(message):
    global rez
    if message.text == "–°—Ç–∞—Ä–∏–∫ –∏ –º–æ—Ä–µ, –≠. –•—ç–º–∏–Ω–≥—É—ç–π":
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
        rez += 1
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –°—Ç–∞—Ä–∏–∫ –∏ –º–æ—Ä–µ, –≠. –•—ç–º–∏–Ω–≥—É—ç–π")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π")
    ans2 = types.KeyboardButton("–ú–∞–¥–∞–º –ë–æ–≤–∞—Ä–∏, –ì. –§–ª–æ–±–µ—Ä")
    ans3 = types.KeyboardButton("–£–Ω–µ—Å–µ–Ω–Ω—ã–π –≤–µ—Ç—Ä–æ–º, –ú. –ú–∏—Ç—á–µ–ª–ª")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id, "–ó–∞–º—É–∂–µ—Å—Ç–≤–æ –Ω–µ –ø–æ–º–µ—à–∞–ª–æ –µ–π –∑–∞–≤–µ—Å—Ç–∏ —Ä–æ–º–∞–Ω –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ. –û—Ç–Ω–æ—à–µ–Ω–∏—è —Å –ª—é–±–æ–≤–Ω–∏–∫–æ–º –∑–∞—à–ª–∏ –≤ —Ç—É–ø–∏–∫. –î–∞–º–∞ –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç–∏–ª–∞—Å—å –∫ –Ω–∞—Ä–∫–æ—Ç–∏—á–µ—Å–∫–∏–º –≤–µ—â–µ—Å—Ç–≤–∞–º, –∞ –ø–æ—Å–ª–µ –±—Ä–æ—Å–∏–ª–∞—Å—å –ø–æ–¥ –ø–æ–µ–∑–¥.", reply_markup=markup)
    bot.register_next_step_handler(message, game4)

def game4(message):
    global rez
    if message.text == "–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π":
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
        rez += 1
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("¬´–î–µ—Ç—Å—Ç–≤–æ. –û—Ç—Ä–æ—á–µ—Å—Ç–≤–æ. –Æ–Ω–æ—Å—Ç—å.¬ª, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π")
    ans2 = types.KeyboardButton("–ù–∞–¥ –ø—Ä–æ–ø–∞—Å—Ç—å—é –≤–æ —Ä–∂–∏, –î.–°—ç–ª–∏–Ω–¥–∂–µ—Ä")
    ans3 = types.KeyboardButton("–í–∏–Ω–æ –∏–∑ –æ–¥—É–≤–∞–Ω—á–∏–∫–æ–≤, –†. –ë—Ä—ç–¥–±–µ—Ä–∏")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id, "–Æ–Ω—ã–π –ø–∞—Ä–µ–Ω—å –Ω–µ–Ω–∞–≤–∏–¥–∏—Ç –ª–∏—Ü–µ–º–µ—Ä–∏–µ –∏ –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç –Ω–µ–∂–Ω—ã–µ –±—Ä–∞—Ç—Å–∫–∏–µ —á—É–≤—Å—Ç–≤–∞ –∫ —Å–µ—Å—Ç—Ä–µ –∏ –¥—Ä—É–≥–∏–º –¥–µ—Ç–∏—à–∫–∞–º. –ü–æ–∫–∞ –æ–Ω –º–µ—á—Ç–∞–µ—Ç –æ –ø—Ä–æ–≥—É–ª–∫–∞—Ö —Å —Ä–µ–±—è—Ç–Ω–µ–π –≤ –ø–æ–ª—è—Ö, –µ–≥–æ –æ—Ç—á–∏—Å–ª—è—é—Ç –∏–∑ —à–∫–æ–ª—ã.\n\n–û—Ç –ª–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∞ —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –æ—Ç–¥–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –∫ –ø—Ä–æ—á—Ç–µ–Ω–∏—é –¥–∞–Ω–Ω—É—é –∫–Ω–∏–≥—Éüòâ", reply_markup=markup)
    bot.register_next_step_handler(message, game5)

def game5(message):
    global rez
    if message.text == "–ù–∞–¥ –ø—Ä–æ–ø–∞—Å—Ç—å—é –≤–æ —Ä–∂–∏, –î.–°—ç–ª–∏–Ω–¥–∂–µ—Ä":
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
        rez += 1
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ù–∞–¥ –ø—Ä–æ–ø–∞—Å—Ç—å—é –≤–æ —Ä–∂–∏, –î.–°—ç–ª–∏–Ω–¥–∂–µ—Ä")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–£–±–∏—Ç—å –ø–µ—Ä–µ—Å–º–µ—à–Ω–∏–∫–∞, –•. –õ–∏")
    ans2 = types.KeyboardButton("–î–µ—Å—è—Ç –Ω–µ–≥—Ä–∏—Ç—è—Ç, –ê. –ö—Ä–∏—Å—Ç–∏")
    ans3 = types.KeyboardButton("–ó–µ–ª–µ–Ω–∞—è –º–∏–ª—è, –°. –ö–∏–Ω–≥")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id, '–ò—Å—Ç–æ—Ä–∏—è –æ —á–µ—Ä–Ω–æ–∫–æ–∂–µ–º –ø–∞—Ä–Ω–µ, –ø–æ–≥–∏–±—à–µ–º –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–±–µ–∂–∞—Ç—å –∏–∑ —Ç—é—Ä—å–º—ã, –∫—É–¥–∞ –µ–≥–æ –Ω–µ–∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ –ø–æ—Å–∞–¥–∏–ª–∏ –∑–∞ "–Ω–∞—Å–∏–ª–∏–µ". –ê —Ç–∞–∫–∂–µ –æ —Ä–æ–±–∫–æ–º, –ø—É–≥–ª–∏–≤–æ–º —á—É–¥–∞–∫–µ, —Å–ø–∞—Å—à–µ–º –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏—Ö –¥–µ—Ç–µ–π –æ—Ç –Ω–∞–ø–∞–¥–µ–Ω–∏—è.', reply_markup=markup)
    bot.register_next_step_handler(message, game6)

def game6(message):
    global rez
    if message.text == "–£–±–∏—Ç—å –ø–µ—Ä–µ—Å–º–µ—à–Ω–∏–∫–∞, –•. –õ–∏":
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
        rez += 1
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –£–±–∏—Ç—å –ø–µ—Ä–µ—Å–º–µ—à–Ω–∏–∫–∞, –•. –õ–∏")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–ê—Å—è, –ò.–°. –¢—É—Ä–≥–µ–Ω–µ–≤")
    ans2 = types.KeyboardButton("–ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω, –ê.–°. –ü—É—à–∫–∏–Ω")
    ans3 = types.KeyboardButton("–ë–µ–¥–Ω–∞—è –õ–∏–∑–∞, –ù. –ö–∞—Ä–∞–º–∑–∏–Ω")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id, '–í —ç—Ç–æ–º —Ä–æ–º–∞–Ω–µ –∞–≤—Ç–æ—Ä –ø–æ–¥–Ω–∏–º–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ —Ç–æ–º, —Å—Ç–æ–∏—Ç –ª–∏ –∂–µ–Ω—â–∏–Ω–µ –¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥, –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –≤ –ª—é–±–≤–∏ –æ—Ç –º—É–∂—á–∏–Ω—ã.', reply_markup=markup)
    bot.register_next_step_handler(message, game7)

def game7(message):
    global rez
    if message.text == "–ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω, –ê.–°. –ü—É—à–∫–∏–Ω":
        rez += 1
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω, –ê.–°. –ü—É—à–∫–∏–Ω")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–ì—Ä–∞–Ω–∞—Ç–æ–≤—ã–π –±—Ä–∞—Å–ª–µ—Ç, –ê.–ò. –ö—É–ø—Ä–∏–Ω")
    ans2 = types.KeyboardButton("–ñ–∏–∑–Ω—å –≤–∑–∞–π–º—ã, –≠.–ú. –†–µ–º–∞—Ä–∫")
    ans3 = types.KeyboardButton("–®–∏–Ω–µ–ª—å, –ù. –ì–æ–≥–æ–ª—å")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id,'–ò—Å—Ç–æ—Ä–∏—è –æ —Ç–æ–º, –∫–∞–∫ –º–µ–ª–∫–∏–π —Å–ª—É–∂–∞—â–∏–π –ø—Ä–∏–æ–±—Ä–µ–ª –∏ –ø–æ—Ç–µ—Ä—è–ª –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç –≥–∞—Ä–¥–µ—Ä–æ–±–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ —É–º–µ—Ä –∏ —Å—Ç–∞–ª –ø—Ä–∏–∑—Ä–∞–∫–æ–º.',reply_markup=markup)
    bot.register_next_step_handler(message, game8)

def game8(message):
    global rez
    if message.text == "–®–∏–Ω–µ–ª—å, –ù. –ì–æ–≥–æ–ª—å":
        rez += 1
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –®–∏–Ω–µ–ª—å, –ù. –ì–æ–≥–æ–ª—å")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–ü–æ—Ä—Ç—Ä–µ—Ç –î–æ—Ä–∏–∞–Ω–∞ –ì—Ä–µ—è, –û. –£–∞–π–ª—å–¥")
    ans2 = types.KeyboardButton("–®–∞–≥—Ä–µ–Ω–µ–≤–∞—è –∫–æ–∂–∞, –û. –ë–∞–ª—å–∑–∞–∫")
    ans3 = types.KeyboardButton("–í–µ–ª–∏–∫–∏–π –ì—ç—Ç—Å–±–∏, –§.–°. –§–∏—Ü–¥–∂–µ—Ä–∞–ª—å–¥")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id,'–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫ –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–¥–∞—Ä–æ–∫ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –ü—Ä–µ–¥–º–µ—Ç –∏—Å–ø–æ–ª–Ω—è–µ—Ç –ª—é–±—ã–µ –∂–µ–ª–∞–Ω–∏—è, –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞—è—Å—å –∏ —Å–æ–∫—Ä–∞—â–∞—è –∂–∏–∑–Ω—å –≥–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –í –∏—Ç–æ–≥–µ –≥–µ—Ä–æ–π –ø–æ–ª—É—á–∞–µ—Ç –±–æ–≥–∞—Ç—Å—Ç–≤–∞ –∏ –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–º, –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –∏—Å—Ç–∏–Ω–Ω–∞—è –ª—é–±–æ–≤—å –≤—Å–µ–≥–¥–∞ –±—ã–ª–∞ —Ä—è–¥–æ–º, –∏ —É–º–∏—Ä–∞–µ—Ç.',reply_markup=markup)
    bot.register_next_step_handler(message, game9)

def game9(message):
    global rez
    if message.text == "–®–∞–≥—Ä–µ–Ω–µ–≤–∞—è –∫–æ–∂–∞, –û. –ë–∞–ª—å–∑–∞–∫":
        rez += 1
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –®–∞–≥—Ä–µ–Ω–µ–≤–∞—è –∫–æ–∂–∞, –û. –ë–∞–ª—å–∑–∞–∫")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–í–æ–π–Ω–∞ –∏ –º–∏—Ä, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π")
    ans2 = types.KeyboardButton("–ì–æ—Ä–µ –æ—Ç —É–º–∞, –ê.–°. –ì—Ä–∏–±–æ–µ–¥–æ–≤")
    ans3 = types.KeyboardButton("–£–Ω–∏–∂–µ–Ω–Ω—ã–µ –∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–Ω—ã–µ, –§.–ú. –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id,'–°–∫–≤–æ–∑—å –≤–æ–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ—Ç–µ—Ä–∏ –∏ –ø–µ—Ä–∏–ø–µ—Ç–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏—Ö –ø–∞—Ä –Ω–∞—Ö–æ–¥—è—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç —É–¥–∞—á–Ω—ã–µ –ø–∞—Ä—Ç–∏–∏.',reply_markup=markup)
    bot.register_next_step_handler(message, game10)

def game10(message):
    global rez
    if message.text == "–í–æ–π–Ω–∞ –∏ –º–∏—Ä, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π":
        rez += 1
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –í–æ–π–Ω–∞ –∏ –º–∏—Ä, –õ.–ù. –¢–æ–ª—Å—Ç–æ–π")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    ans1 = types.KeyboardButton("–¶–∞—Ä—å –≠–¥–∏–ø, –°–æ—Ñ–æ–∫–ª")
    ans2 = types.KeyboardButton("–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏, –ò.–°. –¢—É—Ä–≥–µ–Ω–µ–≤")
    ans3 = types.KeyboardButton("–ì–∞–º–ª–µ—Ç, –£. –®–µ–∫—Å–ø–∏—Ä")
    markup.add(ans1)
    markup.add(ans2)
    markup.add(ans3)
    bot.send_message(message.chat.id,'–ì–ª–∞–≤–Ω—ã–π –≥–µ—Ä–æ–π –≤–∏–¥–∏—Ç –ø—Ä–∏–∑—Ä–∞–∫ –æ—Ç—Ü–∞. –ï–≥–æ –≤–æ–∑–ª—é–±–ª–µ–Ω–Ω–∞—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—É–º–∞—Å—à–µ–¥—à–µ–π. –í –∏—Ç–æ–≥–µ –≤—Å–µ —É–º–∏—Ä–∞—é—Ç.',reply_markup=markup)
    bot.register_next_step_handler(message, end)

def end(message):
    global rez
    if message.text == "–ì–∞–º–ª–µ—Ç, –£. –®–µ–∫—Å–ø–∏—Ä":
        rez += 1
        bot.send_message(message.chat.id, "üéâüéâüéâ\n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ço –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    else:
        bot.send_message(message.chat.id, "üòîüòîüòî\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - –ì–∞–º–ª–µ—Ç, –£. –®–µ–∫—Å–ø–∏—Ä")
    if rez>7:
        bot.send_message(message.chat.id, "–í–∞—É, –º–æ–ª–æ–¥–µ—Ü! –¢—ã –æ—Ç–ª–∏—á–Ω–æ –∑–Ω–∞–µ—à—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –∫–Ω–∏–≥.\n–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - " + str(rez))
    elif rez>4:
        bot.send_message(message.chat.id, "–ú–æ–≥–ª–æ –±—ã—Ç—å –∏ –ª—É—á—à–µ, –Ω–æ —Ç—ã –≤—Å–µ —Ä–∞–≤–Ω–æ –º–æ–ª–æ–¥–µ—Ü! –°–æ–≤–µ—Ç—É—é —Ç–µ–±–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –Ω–µ —Å–º–æ–≥ —É–≥–∞–¥–∞—Ç—å. –û–±–µ—â–∞—é, —ç—Ç–æ –±—É–¥–µ—Ç –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!\n–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - " + str(rez))
    else:
        bot.send_message(message.chat.id, "–û–π-–æ–π! –ù–µ –Ω—É–∂–Ω–æ –±—ã–ª–æ —Å–ø–∞—Ç—å –Ω–∞ —É—Ä–æ–∫–∞—Ö –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã!\n–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - " + str(rez))
    top = codecs.open("game.txt", 'a', encoding='utf-8')
    top.write('\n' + message.from_user.first_name + '"' + str(message.chat.id) + '"' + str(rez) + '\n')
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    find = types.KeyboardButton("üìö–ù–∞–π—Ç–∏ –∫–Ω–∏–≥—É")
    mark = types.KeyboardButton("üåü–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É")
    rating = types.KeyboardButton("üìä–†–µ–π—Ç–∏–Ω–≥")
    rand = types.KeyboardButton("üé≤–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞")
    help = types.KeyboardButton('‚ùì–ü–æ–º–æ—â—å –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è')
    game = types.KeyboardButton('üéØ–í–∏–∫—Ç–æ—Ä–∏–Ω–∞')
    markup.add(find, mark, rating, rand, game)
    markup.add(help)
    bot.send_message(message.chat.id, "–í—ã —Å–Ω–æ–≤–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=markup)
    bot.register_next_step_handler(message, bot_message)
bot.polling(none_stop=True)
